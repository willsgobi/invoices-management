@page
@using InvoiceManagementApp.Enums
@using InvoiceManagementApp.Extensions
@model InvoiceModel
@{
    ViewData["Title"] = "Home page";
}

@if (Model == null)
{
    <div>Não foi possível carregar as informações da tela</div>
}
else
{
    <div class="container">
        <br />
        <div class="container-fluid" style="width: 80vw;">
            <div class="row">
                <span class="display-6">Lista de notas</span>
                <hr />

                <div class="col">
                    @if (Model.ErrorMessage != null)
                    {
                        <div>@Model.ErrorMessage</div>
                    }
                    else
                    {
                        @await Html.PartialAsync("_InvoiceFilters")
                        <table class="table table-striped table-bordered mt-4">
                            <thead>
                                <tr>
                                    <th class="text-center">@Html.DisplayNameFor(model => model.PagedInvoices.Invoices.First().Id)</th>
                                    <th class="text-center">@Html.DisplayNameFor(model => model.PagedInvoices.Invoices.First().PayerName)</th>
                                    <th class="text-center">@Html.DisplayNameFor(model => model.PagedInvoices.Invoices.First().InvoiceNumber)</th>
                                    <th class="text-center">@Html.DisplayNameFor(model => model.PagedInvoices.Invoices.First().InvoiceAmount)</th>
                                    <th class="text-center">@Html.DisplayNameFor(model => model.PagedInvoices.Invoices.First().InvoiceDocument)</th>
                                    <th class="text-center">@Html.DisplayNameFor(model => model.PagedInvoices.Invoices.First().BankSlipDocument)</th>
                                    <th class="text-center">@Html.DisplayNameFor(model => model.PagedInvoices.Invoices.First().InvoiceStatus)</th>
                                    <th class="text-center">@Html.DisplayNameFor(model => model.PagedInvoices.Invoices.First().PaymentPromise)</th>
                                    <th class="text-center">@Html.DisplayNameFor(model => model.PagedInvoices.Invoices.First().IssueDate)</th>
                                    <th class="text-center">@Html.DisplayNameFor(model => model.PagedInvoices.Invoices.First().BillingDate)</th>
                                    <th class="text-center">@Html.DisplayNameFor(model => model.PagedInvoices.Invoices.First().PaymentDate)</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.PagedInvoices.Invoices.Any())
                                {
                                    @foreach (var invoice in Model.PagedInvoices.Invoices)
                                    {
                                        <tr>
                                            <td>@invoice.Id</td>
                                            <td>@invoice.PayerName</td>
                                            <td>@invoice.InvoiceNumber</td>
                                            <td class="text-nowrap">@invoice.InvoiceAmount.ToString("C", new System.Globalization.CultureInfo("pt-BR"))</td>
                                            <td>@invoice.InvoiceDocument</td>
                                            <td>@invoice.BankSlipDocument</td>
                                            <td>@(invoice.InvoiceStatus.GetDescription())</td>
                                            <td>@(invoice.PaymentPromise ? "Sim" : "Não")</td>
                                            <td>@invoice.IssueDate.ToString("dd/MM/yyyy")</td>
                                            <td>@(invoice.BillingDate.HasValue ? invoice.BillingDate.Value.ToString("dd/MM/yyyy") : "N/A")</td>
                                            <td>@(invoice.PaymentDate.HasValue ? invoice.PaymentDate.Value.ToString("dd/MM/yyyy") : "N/A")</td>
                                        </tr>
                                    }
                                }

                            </tbody>
                        </table>
                    }
                </div>
            </div>
            @if (TempData["FilterDescription"] == null)
            {
                <nav aria-label="Page navigation example">
                    <ul class="pagination justify-content-center">
                        <li class="page-item @(@Model.PagedInvoices.PreviousPage == null ? "disabled" : "")">
                            <a class="page-link" href="/invoicelist?page=@Model.PagedInvoices.PreviousPage" tabindex="-1">Anterior</a>
                        </li>
                        @if (@Model.PagedInvoices.PreviousPage != null)
                        {
                            <li class="page-item"><a class="page-link" href="/invoicelist?page=@Model.PagedInvoices.PreviousPage">@Model.PagedInvoices.PreviousPage</a></li>
                        }
                        <li class="page-item disabled"><a class="page-link" href="/invoicelist?page=@Model.PagedInvoices.CurrentPage">@Model.PagedInvoices.CurrentPage</a></li>
                        @if (@Model.PagedInvoices.NextPage != null)
                        {
                            <li class="page-item"><a class="page-link" href="/invoicelist?page=@Model.PagedInvoices.NextPage">@Model.PagedInvoices.NextPage</a></li>
                            <li class="page-item">
                                <a class="page-link" href="/invoicelist?page=@Model.PagedInvoices.NextPage">Próxima</a>
                            </li>
                        }
                    </ul>
                </nav>
            }
        </div>

    </div>
}
