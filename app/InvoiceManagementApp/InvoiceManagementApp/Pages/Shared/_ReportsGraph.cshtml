@using System.Text.Json
@using System.Globalization
@model InvoiceManagementApp.Models.Reports

@if (Model == null)
{
    <div>Carregando gráfico...</div>
}
else
{
    <div class="row">
        <div class="col">
            <div class="chart-container">
                <canvas id="lineChart"></canvas>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var ctx = document.getElementById('lineChart').getContext('2d');
            
            var dataLabels = @Html.Raw(JsonSerializer.Serialize(Model.TotalCountWithoutPayment.Select(x => x.Day.HasValue ? $"{x.Day}/{x.Month.ToString().PadLeft(2, '0')}" : !x.Year.HasValue ? $"{@DateTimeFormatInfo.GetInstance(new CultureInfo("pt-BR")).GetMonthName(x.Month)}" : $"{@DateTimeFormatInfo.GetInstance(new CultureInfo("pt-BR")).GetMonthName(x.Month)}/{x.Year}")));
            var dataValuesWithoutPayment = @Html.Raw(JsonSerializer.Serialize(Model.TotalCountWithoutPayment.Select(x => x.Count)));
            var dataValuesWithPayment = @Html.Raw(JsonSerializer.Serialize(Model.TotalCountWithPayment.Select(x => x.Count)));

            var data = {
                labels: dataLabels,
                datasets: [
                    {
                        label: 'Total Com Pagamento',
                        data: dataValuesWithPayment,
                        borderColor: 'rgba(75, 192, 192, 1)',
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        borderWidth: 2,
                        fill: true
                    },
                    {
                        label: 'Total Sem Pagamento',
                        data: dataValuesWithoutPayment,
                        borderColor: 'rgba(255, 99, 132, 1)',
                        backgroundColor: 'rgba(255, 99, 132, 0.2)',
                        borderWidth: 2,
                        fill: true
                    }
                ]
            };

            var config = {
                type: 'line',
                data: data,
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        x: {
                            title: {
                                display: true,
                                text: 'Mês/Ano'
                            },
                            ticks: {
                                autoSkip: true,
                                maxRotation: 90
                            }
                        },
                        y: {
                            title: {
                                display: true,
                                text: 'Contagem'
                            },
                            beginAtZero: true
                        }
                    }
                }
            };

            new Chart(ctx, config);
        });
    </script>
}